{"version":3,"sources":["components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","text","items","id","Date","now","handleChange","bind","handleSubmit","clearTodoList","event","this","setState","target","value","preventDefault","length","newTodo","concat","item","onSubmit","htmlFor","onChange","onClick","Component","TodoList","map","React","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAEaA,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,MAAO,CAAC,CACJD,KAAO,QACPE,GAAKC,KAAKC,OAEd,CACIJ,KAAO,QACPE,GAAKC,KAAKC,SAGlB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBAfN,EADvB,gDAmBI,SAAaG,GACTC,KAAKC,SAAS,CACVX,KAAOS,EAAMG,OAAOC,UArBhC,0BAyBI,SAAaJ,GAET,GADAA,EAAMK,iBACwB,IAA3BJ,KAAKX,MAAMC,KAAKe,OAAnB,CAEA,IAAMC,EAAU,CACZhB,KAAOU,KAAKX,MAAMC,KAClBE,GAAKC,KAAKC,OAGdM,KAAKC,UAAS,SAAAZ,GAAK,MAAK,CACpBE,MAAQF,EAAME,MAAMgB,OAAOD,GAC3BhB,KAAO,UApCnB,2BAwCI,SAAcS,GACVA,EAAMK,iBACNJ,KAAKC,SAAS,CACVV,MAAQ,OA3CpB,oBA+CI,WACI,OACI,gCACI,0CACA,8BACG,cAAC,EAAD,CAAUiB,KAAMR,KAAKX,MAAME,UAE9B,uBAAMkB,SAAUT,KAAKH,aAArB,UACI,uBAAOa,QAAQ,KAAf,2BAAyC,uBACzC,uBAAOlB,GAAG,KAAKmB,SAAUX,KAAKL,aAAcQ,MAAOH,KAAKX,MAAMC,OAAQ,uBACtE,yCAAqB,KACrB,wBAAQsB,QAASZ,KAAKF,cAAtB,6BA1DpB,GAA0Be,aAiEpBC,E,4JACF,WACI,OACI,6BACKd,KAAKZ,MAAMoB,KAAKO,KACb,SAAAP,GAAI,OACA,6BAAmBA,EAAKlB,MAAfkB,EAAKhB,a,GANfwB,IAAMH,WAcd1B,ICpEA8B,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.871c2af8.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class Todo extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            text: '',\n            items: [{\n                text : 'Hello',\n                id : Date.now()\n            },\n            {\n                text : 'World',\n                id : Date.now()\n            }]\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.clearTodoList = this.clearTodoList.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState({ \n            text : event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        if(this.state.text.length === 0) return\n\n        const newTodo = {\n            text : this.state.text,\n            id : Date.now()\n        }\n\n        this.setState(state => ({\n            items : state.items.concat(newTodo),\n            text : ''\n        }))\n    }\n\n    clearTodoList(event) {\n        event.preventDefault()\n        this.setState({\n            items : []\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>TODO APP</h1>\n                <div>\n                   <TodoList item={this.state.items} />\n                </div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"id\">Input Action:</label><br />\n                    <input id=\"id\" onChange={this.handleChange} value={this.state.text} /><br />\n                    <button>Add</button>{'  '}\n                    <button onClick={this.clearTodoList}>Clear</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nclass TodoList extends React.Component {\n    render() {\n        return(\n            <ul>\n                {this.props.item.map(\n                    item => (\n                        <li key={item.id}>{item.text}</li>\n                    )\n                )}\n            </ul>\n        )\n    }\n}\n\nexport default Todo\n","import './App.css';\nimport Todo from './components/todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Todo />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}